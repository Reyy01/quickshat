// Mocks generated by Mockito 5.4.4 from annotations
// in quickchat_ui/test/features/authentication/data/repositories/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quickchat_ui/core/network/network_info.dart' as _i5;
import 'package:quickchat_ui/features/authentication/data/datasources/auth_local_datasource.dart'
    as _i9;
import 'package:quickchat_ui/features/authentication/data/datasources/auth_remote_datasource.dart'
    as _i7;
import 'package:quickchat_ui/features/authentication/data/dto/LoginData.dto.dart'
    as _i3;
import 'package:quickchat_ui/features/authentication/data/dto/LoginUser.dto.dart'
    as _i4;
import 'package:quickchat_ui/features/authentication/data/dto/RegisterUser.dto.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUnit_0 extends _i1.SmartFake implements _i2.Unit {
  _FakeUnit_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginDatasDto_1 extends _i1.SmartFake implements _i3.LoginDatasDto {
  _FakeLoginDatasDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginUserDto_2 extends _i1.SmartFake implements _i4.LoginUserDto {
  _FakeLoginUserDto_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void connectionListener(dynamic Function(bool)? isConnected) =>
      super.noSuchMethod(
        Invocation.method(
          #connectionListener,
          [isConnected],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void connectionTimeoutListener({
    required Function? onTimeout,
    required Function? onConnect,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #connectionTimeoutListener,
          [],
          {
            #onTimeout: onTimeout,
            #onConnect: onConnect,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDatasource extends _i1.Mock
    implements _i7.AuthRemoteDatasource {
  MockAuthRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Unit> connectServer() => (super.noSuchMethod(
        Invocation.method(
          #connectServer,
          [],
        ),
        returnValue: _i6.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #connectServer,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Unit>);

  @override
  _i6.Future<_i3.LoginDatasDto> loginUser(_i4.LoginUserDto? loginUserDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [loginUserDto],
        ),
        returnValue: _i6.Future<_i3.LoginDatasDto>.value(_FakeLoginDatasDto_1(
          this,
          Invocation.method(
            #loginUser,
            [loginUserDto],
          ),
        )),
      ) as _i6.Future<_i3.LoginDatasDto>);

  @override
  _i6.Future<_i2.Unit> registerUser(_i8.RegisterUserDto? registerUserDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [registerUserDto],
        ),
        returnValue: _i6.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #registerUser,
            [registerUserDto],
          ),
        )),
      ) as _i6.Future<_i2.Unit>);
}

/// A class which mocks [AuthLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDatasource extends _i1.Mock
    implements _i9.AuthLocalDatasource {
  MockAuthLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Unit> saveCredentials(_i4.LoginUserDto? loginData) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCredentials,
          [loginData],
        ),
        returnValue: _i6.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #saveCredentials,
            [loginData],
          ),
        )),
      ) as _i6.Future<_i2.Unit>);

  @override
  _i2.Unit saveUser(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [userId],
        ),
        returnValue: _FakeUnit_0(
          this,
          Invocation.method(
            #saveUser,
            [userId],
          ),
        ),
      ) as _i2.Unit);

  @override
  _i2.Unit saveToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [token],
        ),
        returnValue: _FakeUnit_0(
          this,
          Invocation.method(
            #saveToken,
            [token],
          ),
        ),
      ) as _i2.Unit);

  @override
  _i6.Future<_i4.LoginUserDto> getCredentials() => (super.noSuchMethod(
        Invocation.method(
          #getCredentials,
          [],
        ),
        returnValue: _i6.Future<_i4.LoginUserDto>.value(_FakeLoginUserDto_2(
          this,
          Invocation.method(
            #getCredentials,
            [],
          ),
        )),
      ) as _i6.Future<_i4.LoginUserDto>);

  @override
  _i2.Unit deleteCredetialsAndTokens() => (super.noSuchMethod(
        Invocation.method(
          #deleteCredetialsAndTokens,
          [],
        ),
        returnValue: _FakeUnit_0(
          this,
          Invocation.method(
            #deleteCredetialsAndTokens,
            [],
          ),
        ),
      ) as _i2.Unit);
}
