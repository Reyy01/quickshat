// Mocks generated by Mockito 5.4.4 from annotations
// in quickchat_ui/test/features/authentication/data/bloc/auth.bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quickchat_ui/core/logic/result.dart' as _i2;
import 'package:quickchat_ui/features/authentication/data/dto/LoginData.dto.dart'
    as _i8;
import 'package:quickchat_ui/features/authentication/data/dto/LoginUser.dto.dart'
    as _i6;
import 'package:quickchat_ui/features/authentication/data/dto/RegisterUser.dto.dart'
    as _i7;
import 'package:quickchat_ui/features/authentication/domain/repositories/auth_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.Unit>> connectServer() => (super.noSuchMethod(
        Invocation.method(
          #connectServer,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.Unit>>.value(_FakeResult_0<_i5.Unit>(
          this,
          Invocation.method(
            #connectServer,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Unit>>);

  @override
  _i4.Future<_i2.Result<_i6.LoginUserDto>> getCredentials() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCredentials,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i6.LoginUserDto>>.value(
            _FakeResult_0<_i6.LoginUserDto>(
          this,
          Invocation.method(
            #getCredentials,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.LoginUserDto>>);

  @override
  _i4.Future<_i2.Result<_i5.Unit>> registerUser(
          _i7.RegisterUserDto? registerUserDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [registerUserDto],
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.Unit>>.value(_FakeResult_0<_i5.Unit>(
          this,
          Invocation.method(
            #registerUser,
            [registerUserDto],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Unit>>);

  @override
  _i4.Future<_i2.Result<_i8.LoginDatasDto>> loginUser(
          _i6.LoginUserDto? loginUserDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [loginUserDto],
        ),
        returnValue: _i4.Future<_i2.Result<_i8.LoginDatasDto>>.value(
            _FakeResult_0<_i8.LoginDatasDto>(
          this,
          Invocation.method(
            #loginUser,
            [loginUserDto],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i8.LoginDatasDto>>);

  @override
  _i4.Future<_i2.Result<_i8.LoginDatasDto>> autoLoginUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #autoLoginUser,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i8.LoginDatasDto>>.value(
            _FakeResult_0<_i8.LoginDatasDto>(
          this,
          Invocation.method(
            #autoLoginUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i8.LoginDatasDto>>);

  @override
  _i4.Future<_i2.Result<_i5.Unit>> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.Unit>>.value(_FakeResult_0<_i5.Unit>(
          this,
          Invocation.method(
            #logoutUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Unit>>);
}
